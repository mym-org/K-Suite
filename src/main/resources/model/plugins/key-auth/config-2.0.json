{
  "name": "key-auth",
  "functionality": "Authentication",
  "icon": "/images/plugins/key-auth.png",
  "hubDesc": "Add key authentication to your Services",
  "description": "Add key authentication (also sometimes referred to as an API key) to a Service or a Route.",
  "supportKongVersions": ["2.0","2.1"],
  "no_consumer": true,
  "fields": [
    {
      "name": "key_names",
      "component": "InputMultiple",
      "type": "String",
      "restrict": "optional",
      "help": "Describes an array of parameter names where the plugin will look for a key. The client must send the authentication key in one of those key names, and the plugin will try to read the credential from a header or the query string parameter with the same name.\n\nNote: the key names may only contain [a-z], [A-Z], [0-9], [_] and [-]."
    },
    {
      "name": "key_in_body",
      "component": "Switch",
      "type": "boolean",
      "value": false,
      "restrict": "optional",
      "help": "If enabled, the plugin will read the request body (if said request has one and its MIME type is supported) and try to find the key in it. Supported MIME types are application/www-form-urlencoded, application/json, and multipart/form-data."
    },
    {
      "name": "hide_credentials",
      "component": "Switch",
      "type": "boolean",
      "value": false,
      "restrict": "optional",
      "help": "An optional boolean value telling the plugin to show or hide the credential from the upstream service. If true, the plugin will strip the credential from the request (i.e. the header or querystring containing the key) before proxying it."
    },
    {
      "name": "anonymous",
      "component": "SelectConsumer",
      "type": "String",
      "restrict": "optional",
      "none_value": null,
      "help": "An optional string (consumer uuid) value to use as an “anonymous” consumer if authentication fails. If empty (default), the request will fail with an authentication failure 4xx. Please note that this value must refer to the Consumer id attribute which is internal to Kong, and not its custom_id."
    },
    {
      "name": "run_on_preflight",
      "component": "Switch",
      "type": "boolean",
      "value": false,
      "restrict": "optional",
      "help": "A boolean value that indicates whether the plugin should run (and try to authenticate) on OPTIONS preflight requests, if set to false then OPTIONS requests will always be allowed."
    }
  ],
  "methods": {
    "add": {
      "method": "POST",
      "url": "/plugins/"
    },
    "update": {
      "method": "PATCH",
      "url": "/plugins/{id}"
    }
  }
}